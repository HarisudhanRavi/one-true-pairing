name: Deploy to MDP

on:
  push:
    branches:
      - main
  workflow_dispatch: { }
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
jobs:
  build:
    if: github.repository_owner == 'Maersk-Global'
    name: Build and test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    # caching for deps/ directory
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    # caching for _build directory
    - name: Restore build cache
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix
    # bust the cache for incremental builds (apparently a cause of bugs)
    - name:
      if: github.run_attempt != 1
      run: |
        mix deps.clean --all
        mix clean
      shell: sh
    - name: Install dependencies
      run: mix deps.get
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    - name: Run tests
      run: MIX_ENV=test mix test
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}

  BuildAndPushDockerImage:
    needs: build
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_TAG: "dev-${{ github.sha }}"
      DOCKER_IMAGE_NAME: "${{ secrets.CONTAINER_REGISTRY_SERVER }}/onetruepairing/onetruepairing"
      BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.CONTAINER_REGISTRY_PASSWORD }}" | docker login --username="${{ secrets.CONTAINER_REGISTRY_USERNAME }}" --password-stdin "${{ secrets.CONTAINER_REGISTRY_SERVER }}"
          docker build --quiet --build-arg="GITHUB_SHA=${{ github.sha }}" --tag="${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}" . 
          docker push --quiet "${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}"
      - name: Output Docker Image Tag
        run: |
          echo "Docker image has been pushed with tag:"
          echo "${{ env.DOCKER_IMAGE_TAG }}"
